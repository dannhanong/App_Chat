/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import Swing.JIMSendTextPane;
import Swing.ScrollBar;
import events.PublicEvent;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import model.Model_Send_Message;
import model.Model_User_Account;
import net.miginfocom.swing.MigLayout;
import service.Service;

/**
 *
 * @author Admin
 */
public class Chat_Bottom extends javax.swing.JPanel {

    /**
     * Creates new form Chat_Title
     */
    private Model_User_Account user;

    public Model_User_Account getUser() {
        return user;
    }

    public void setUser(Model_User_Account user) {
        this.user = user;
    }
    
    public Chat_Bottom() {
        initComponents();
        init();
    }
    
    private void init(){
        mig = new MigLayout("fillx, filly", "0[fill]0[]0[]0", "1[fill]1[]0");
        setLayout(mig);
        JScrollPane scroll = new JScrollPane();
        scroll.setBorder(null);
        JIMSendTextPane txt = new JIMSendTextPane();
        
        txt.addKeyListener(new KeyAdapter(){
            @Override
            public void keyTyped(KeyEvent e) {
                refresh();
            }
        });
        
        scroll.setViewportView(txt);
        ScrollBar sb = new ScrollBar();
        scroll.setVerticalScrollBar(sb);
        sb.setPreferredSize(new Dimension(2, 5));
        add(sb);
        add(scroll, "w 100%");
        
        JPanel panel = new JPanel();
        panel.setPreferredSize(new Dimension(30, 10));
        panel.setLayout(new MigLayout("filly", "0[]3[]0", "0[bottom]0"));
        JButton jbt = new JButton();
        jbt.setBorder(null);
        jbt.setContentAreaFilled(false);
        panel.setBackground(Color.white);
        jbt.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jbt.setIcon(new ImageIcon(getClass().getResource("/icons/send1.png")));
        jbt.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                String text = txt.getText().trim();
                if(!text.equals("")){
                    Model_Send_Message message = new Model_Send_Message(Service.getInstance().getUser().getUserID(), user.getUserID(), text);
                    send(message);
                    
                    PublicEvent.getInstance().getEventChat().sendMesage(message);
                    txt.setText("");
                    txt.grabFocus();
                    refresh();
                }else{
                    txt.grabFocus();
                }
            }
        });
        txt.setHintText("Hãy viết gì đó");
        
        JButton jbtMore = new JButton();
        jbtMore.setBorder(null);
        jbtMore.setContentAreaFilled(false);
        jbtMore.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jbtMore.setIcon(new ImageIcon(getClass().getResource("/icons/more2.png")));
        jbtMore.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if(panelMore.isVisible()){
                    jbtMore.setIcon(new ImageIcon(getClass().getResource("/icons/more2.png")));
                    panelMore.setVisible(false);
                    mig.setComponentConstraints(panelMore, "dock south, h 0!");
                    revalidate();
                }else{
                    jbtMore.setIcon(new ImageIcon(getClass().getResource("/icons/more2.png")));
                    panelMore.setVisible(true);
                    mig.setComponentConstraints(panelMore, "dock south, h 150!");
                    revalidate();
                }
            }
        }); 
        panel.add(jbtMore);
        panel.add(jbt);
        add(panel, "wrap");
        panelMore = new Panel_More();
        panelMore.setVisible(false);
        add(panelMore, "dock south, h 0!");
        
    }
    
    private void send(Model_Send_Message data){
        Service.getInstance().getClient().emit("send_to_user", data.toJsonObject());
    }
    
    private void refresh(){
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private MigLayout mig;
    private Panel_More panelMore;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
